apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: api-server-worker
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: api-server-worker
  template:
    metadata:
      labels:
        app: api-server-worker
    spec:
      containers:
      - name: api-server-worker
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - "/bin/sh"
          - "-c"
          - >
            cd /usr/src/delta &&
            celery upgrade settings app/settings/defaults.py &&
            celery -A app.listener worker -l info
        envFrom:
        - secretRef:
            name: mysql-secret
        env:
          {{- range $key, $val := .Values.env }}
          - name: {{ $key }}
            value: "{{ $val }}"
          {{ end }}
          - name: SQLALCHEMY_DATABASE_URI
            value: mysql+pymysql://$(INTERNAL_DB_USERNAME):$(INTERNAL_DB_PASSWORD)@$(INTERNAL_DB_ENDPOINT)/$(INTERNAL_DB_DELTA)
          - name: EXTERNAL_DATABASE_URI
            value: mysql+pymysql://$(EXTERNAL_DB_USERNAME):$(EXTERNAL_DB_PASSWORD)@$(EXTERNAL_DB_ENDPOINT)/$(EXTERNAL_DB_DELTA)
          - name: INTERNAL_DATABASE_URI
            value: mysql+pymysql://$(INTERNAL_DB_USERNAME):$(INTERNAL_DB_PASSWORD)@$(INTERNAL_DB_ENDPOINT)/$(INTERNAL_DB_DELTA)
          - name: PYTHONPATH
            value: /usr/src/delta/app
          - name: LANG
            value: C.UTF-8
        volumeMounts:
        - name: log
          mountPath: /var/log
          subPath: api.log
      volumes:
      - name: log
        emptyDir: {}
